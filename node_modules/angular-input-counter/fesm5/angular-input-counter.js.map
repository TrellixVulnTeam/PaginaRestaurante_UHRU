{"version":3,"file":"angular-input-counter.js","sources":["ng://angular-input-counter/lib/counter.component.ts","ng://angular-input-counter/lib/counter.directive.ts","ng://angular-input-counter/lib/counter.module.ts"],"sourcesContent":["import { Component, Input, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nconst noop = () => {\n};\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CounterComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'angular-input-counter',\n  templateUrl: 'counter.component.html',\n  styleUrls: ['counter.component.scss'],\n  providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR]\n})\nexport class CounterComponent implements ControlValueAccessor {\n  @Input() min = 1;\n  @Input() max = 10;\n  @Input() step = 1;\n  @Input() appearance = 'none';\n  @Input() color = 'primary';\n  @Input() counterValue : number;\n  @Input() readonly : boolean;\n  //Placeholders for the callbacks which are later providesd\n  //by the Control Value Accessor\n  private onTouchedCallback: () => void = noop;\n  private onChangeCallback: (_: any) => void = noop;\n\n  constructor() {\n    this.counterValue = this.counterValue || this.min;\n  }\n\n  @Input()\n  get counter(){\n    return this.counterValue;\n  }\n\n  increment(){\n    if(this.counterValue < this.max) {\n      this.counterValue = this.counterValue + this.step\n      this.onChangeCallback(this.counterValue);\n    }\n  }\n\n  decrement(){\n    if(this.counterValue > this.min) {\n      this.counterValue = this.counterValue - this.step;\n      this.onChangeCallback(this.counterValue);\n    }\n  }\n\n  //get accessor\n  get value(): any {\n    return this.counterValue;\n  };\n\n  //set accessor including call the onchange callback\n  set value(v: any) {\n    if (v !== this.counterValue) {\n      this.counterValue = v;\n      this.onChangeCallback(v);\n    }\n  }\n\n  //Set touched on blur\n  onBlur() {\n    this.onTouchedCallback();\n  }\n\n  //From ControlValueAccessor interface\n  writeValue(value: any) {\n    if (value !== this.counterValue) {\n      this.counterValue = value;\n    }\n  }\n\n  //From ControlValueAccessor interface\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n\n  //From ControlValueAccessor interface\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n}\n"," import {Directive, ElementRef, Input} from '@angular/core';\n\n//only-digits\n@Directive({\n  selector: '[only-digits]'\n})\nexport class OnlyDigitsDirective {\n  constructor(public el: ElementRef) {\n    this.el.nativeElement.onkeypress = (evt) => {\n      if (evt.which < 48 || evt.which > 57) {\n        evt.preventDefault();\n      }\n    };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CounterComponent } from './counter.component';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {OnlyDigitsDirective} from './counter.directive';\nimport {FormsModule} from '@angular/forms';\n\n@NgModule({\n  declarations: [CounterComponent, OnlyDigitsDirective],\n  imports: [\n    MatInputModule,\n    MatIconModule,\n    MatButtonModule,FormsModule\n\n  ],\n  exports: [CounterComponent]\n})\nexport class AngularCounterModule { }\n"],"names":[],"mappings":"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"}