{"version":3,"file":"angular-input-counter.js","sources":["ng:/angular-input-counter/lib/counter.component.ts","ng:/angular-input-counter/lib/counter.directive.ts","ng:/angular-input-counter/lib/counter.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nconst noop = () => {\n};\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CounterComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'angular-input-counter',\n  templateUrl: 'counter.component.html',\n  styleUrls: ['counter.component.scss'],\n  providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR]\n})\nexport class CounterComponent implements ControlValueAccessor {\n  @Input() min = 1;\n  @Input() max = 10;\n  @Input() step = 1;\n  @Input() appearance = 'none';\n  @Input() color = 'primary';\n  @Input() counterValue : number;\n  @Input() readonly : boolean;\n  //Placeholders for the callbacks which are later providesd\n  //by the Control Value Accessor\n  private onTouchedCallback: () => void = noop;\n  private onChangeCallback: (_: any) => void = noop;\n\n  constructor() {\n    this.counterValue = this.counterValue || this.min;\n  }\n\n  @Input()\n  get counter(){\n    return this.counterValue;\n  }\n\n  increment(){\n    if(this.counterValue < this.max) {\n      this.counterValue = this.counterValue + this.step\n      this.onChangeCallback(this.counterValue);\n    }\n  }\n\n  decrement(){\n    if(this.counterValue > this.min) {\n      this.counterValue = this.counterValue - this.step;\n      this.onChangeCallback(this.counterValue);\n    }\n  }\n\n  //get accessor\n  get value(): any {\n    return this.counterValue;\n  };\n\n  //set accessor including call the onchange callback\n  set value(v: any) {\n    if (v !== this.counterValue) {\n      this.counterValue = v;\n      this.onChangeCallback(v);\n    }\n  }\n\n  //Set touched on blur\n  onBlur() {\n    this.onTouchedCallback();\n  }\n\n  //From ControlValueAccessor interface\n  writeValue(value: any) {\n    if (value !== this.counterValue) {\n      this.counterValue = value;\n    }\n  }\n\n  //From ControlValueAccessor interface\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n\n  //From ControlValueAccessor interface\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n}\n"," import {Directive, ElementRef, Input} from '@angular/core';\n\n//only-digits\n@Directive({\n  selector: '[only-digits]'\n})\nexport class OnlyDigitsDirective {\n  constructor(public el: ElementRef) {\n    this.el.nativeElement.onkeypress = (evt) => {\n      if (evt.which < 48 || evt.which > 57) {\n        evt.preventDefault();\n      }\n    };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CounterComponent } from './counter.component';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {OnlyDigitsDirective} from './counter.directive';\nimport {FormsModule} from '@angular/forms';\n\n@NgModule({\n  declarations: [CounterComponent, OnlyDigitsDirective],\n  imports: [\n    MatInputModule,\n    MatIconModule,\n    MatButtonModule,FormsModule\n\n  ],\n  exports: [CounterComponent]\n})\nexport class AngularCounterModule { }\n"]}