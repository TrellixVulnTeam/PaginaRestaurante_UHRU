{"version":3,"file":"angular-input-counter.umd.js","sources":["ng://angular-input-counter/lib/counter.component.ts","ng://angular-input-counter/lib/counter.directive.ts","ng://angular-input-counter/lib/counter.module.ts"],"sourcesContent":["import { Component, Input, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nconst noop = () => {\n};\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CounterComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'angular-input-counter',\n  templateUrl: 'counter.component.html',\n  styleUrls: ['counter.component.scss'],\n  providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR]\n})\nexport class CounterComponent implements ControlValueAccessor {\n  @Input() min = 1;\n  @Input() max = 10;\n  @Input() step = 1;\n  @Input() appearance = 'none';\n  @Input() color = 'primary';\n  @Input() counterValue : number;\n  @Input() readonly : boolean;\n  //Placeholders for the callbacks which are later providesd\n  //by the Control Value Accessor\n  private onTouchedCallback: () => void = noop;\n  private onChangeCallback: (_: any) => void = noop;\n\n  constructor() {\n    this.counterValue = this.counterValue || this.min;\n  }\n\n  @Input()\n  get counter(){\n    return this.counterValue;\n  }\n\n  increment(){\n    if(this.counterValue < this.max) {\n      this.counterValue = this.counterValue + this.step\n      this.onChangeCallback(this.counterValue);\n    }\n  }\n\n  decrement(){\n    if(this.counterValue > this.min) {\n      this.counterValue = this.counterValue - this.step;\n      this.onChangeCallback(this.counterValue);\n    }\n  }\n\n  //get accessor\n  get value(): any {\n    return this.counterValue;\n  };\n\n  //set accessor including call the onchange callback\n  set value(v: any) {\n    if (v !== this.counterValue) {\n      this.counterValue = v;\n      this.onChangeCallback(v);\n    }\n  }\n\n  //Set touched on blur\n  onBlur() {\n    this.onTouchedCallback();\n  }\n\n  //From ControlValueAccessor interface\n  writeValue(value: any) {\n    if (value !== this.counterValue) {\n      this.counterValue = value;\n    }\n  }\n\n  //From ControlValueAccessor interface\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n\n  //From ControlValueAccessor interface\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n}\n"," import {Directive, ElementRef, Input} from '@angular/core';\n\n//only-digits\n@Directive({\n  selector: '[only-digits]'\n})\nexport class OnlyDigitsDirective {\n  constructor(public el: ElementRef) {\n    this.el.nativeElement.onkeypress = (evt) => {\n      if (evt.which < 48 || evt.which > 57) {\n        evt.preventDefault();\n      }\n    };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CounterComponent } from './counter.component';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {OnlyDigitsDirective} from './counter.directive';\nimport {FormsModule} from '@angular/forms';\n\n@NgModule({\n  declarations: [CounterComponent, OnlyDigitsDirective],\n  imports: [\n    MatInputModule,\n    MatIconModule,\n    MatButtonModule,FormsModule\n\n  ],\n  exports: [CounterComponent]\n})\nexport class AngularCounterModule { }\n"],"names":["NG_VALUE_ACCESSOR","forwardRef","Component","Input","Directive","ElementRef","NgModule","MatInputModule","MatIconModule","MatButtonModule","FormsModule"],"mappings":"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"}