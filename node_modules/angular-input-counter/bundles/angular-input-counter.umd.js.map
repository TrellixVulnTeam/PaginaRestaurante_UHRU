{"version":3,"file":"angular-input-counter.umd.js","sources":["ng:/angular-input-counter/lib/counter.component.ts","ng:/angular-input-counter/lib/counter.directive.ts","ng:/angular-input-counter/lib/counter.module.ts"],"names":["NG_VALUE_ACCESSOR","forwardRef","Component","Input","Directive","ElementRef","NgModule","MatInputModule","MatIconModule","MatButtonModule","FormsModule"],"mappings":"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","sourcesContent":["import { Component, Input, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nconst noop = () => {\n};\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CounterComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'angular-input-counter',\n  templateUrl: 'counter.component.html',\n  styleUrls: ['counter.component.scss'],\n  providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR]\n})\nexport class CounterComponent implements ControlValueAccessor {\n  @Input() min = 1;\n  @Input() max = 10;\n  @Input() step = 1;\n  @Input() appearance = 'none';\n  @Input() color = 'primary';\n  @Input() counterValue : number;\n  @Input() readonly : boolean;\n  //Placeholders for the callbacks which are later providesd\n  //by the Control Value Accessor\n  private onTouchedCallback: () => void = noop;\n  private onChangeCallback: (_: any) => void = noop;\n\n  constructor() {\n    this.counterValue = this.counterValue || this.min;\n  }\n\n  @Input()\n  get counter(){\n    return this.counterValue;\n  }\n\n  increment(){\n    if(this.counterValue < this.max) {\n      this.counterValue = this.counterValue + this.step\n      this.onChangeCallback(this.counterValue);\n    }\n  }\n\n  decrement(){\n    if(this.counterValue > this.min) {\n      this.counterValue = this.counterValue - this.step;\n      this.onChangeCallback(this.counterValue);\n    }\n  }\n\n  //get accessor\n  get value(): any {\n    return this.counterValue;\n  };\n\n  //set accessor including call the onchange callback\n  set value(v: any) {\n    if (v !== this.counterValue) {\n      this.counterValue = v;\n      this.onChangeCallback(v);\n    }\n  }\n\n  //Set touched on blur\n  onBlur() {\n    this.onTouchedCallback();\n  }\n\n  //From ControlValueAccessor interface\n  writeValue(value: any) {\n    if (value !== this.counterValue) {\n      this.counterValue = value;\n    }\n  }\n\n  //From ControlValueAccessor interface\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n\n  //From ControlValueAccessor interface\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n}\n"," import {Directive, ElementRef, Input} from '@angular/core';\n\n//only-digits\n@Directive({\n  selector: '[only-digits]'\n})\nexport class OnlyDigitsDirective {\n  constructor(public el: ElementRef) {\n    this.el.nativeElement.onkeypress = (evt) => {\n      if (evt.which < 48 || evt.which > 57) {\n        evt.preventDefault();\n      }\n    };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CounterComponent } from './counter.component';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {OnlyDigitsDirective} from './counter.directive';\nimport {FormsModule} from '@angular/forms';\n\n@NgModule({\n  declarations: [CounterComponent, OnlyDigitsDirective],\n  imports: [\n    MatInputModule,\n    MatIconModule,\n    MatButtonModule,FormsModule\n\n  ],\n  exports: [CounterComponent]\n})\nexport class AngularCounterModule { }\n"]}