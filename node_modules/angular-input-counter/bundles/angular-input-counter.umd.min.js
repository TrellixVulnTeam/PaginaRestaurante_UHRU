!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/forms"),require("@angular/material/input"),require("@angular/material/icon"),require("@angular/material/button")):"function"==typeof define&&define.amd?define("angular-input-counter",["exports","@angular/core","@angular/forms","@angular/material/input","@angular/material/icon","@angular/material/button"],e):e((t=t||self)["angular-input-counter"]={},t.ng.core,t.ng.forms,t.ng.material.input,t.ng.material.icon,t.ng.material.button)}(this,(function(t,e,n,o,r,a){"use strict";var u=function(){},i={provide:n.NG_VALUE_ACCESSOR,useExisting:e.forwardRef((function(){return l})),multi:!0},l=function(){function t(){this.min=1,this.max=10,this.step=1,this.appearance="none",this.color="primary",this.onTouchedCallback=u,this.onChangeCallback=u,this.counterValue=this.counterValue||this.min}return Object.defineProperty(t.prototype,"counter",{get:function(){return this.counterValue},enumerable:!0,configurable:!0}),t.prototype.increment=function(){this.counterValue<this.max&&(this.counterValue=this.counterValue+this.step,this.onChangeCallback(this.counterValue))},t.prototype.decrement=function(){this.counterValue>this.min&&(this.counterValue=this.counterValue-this.step,this.onChangeCallback(this.counterValue))},Object.defineProperty(t.prototype,"value",{get:function(){return this.counterValue},set:function(t){t!==this.counterValue&&(this.counterValue=t,this.onChangeCallback(t))},enumerable:!0,configurable:!0}),t.prototype.onBlur=function(){this.onTouchedCallback()},t.prototype.writeValue=function(t){t!==this.counterValue&&(this.counterValue=t)},t.prototype.registerOnChange=function(t){this.onChangeCallback=t},t.prototype.registerOnTouched=function(t){this.onTouchedCallback=t},t.decorators=[{type:e.Component,args:[{selector:"angular-input-counter",template:'<mat-form-field [appearance]="appearance">\n  <button mat-mini-fab matPrefix [color]="color" (click)="decrement()" [disabled]="counterValue <= min">\n    <mat-icon>remove</mat-icon>\n  </button>\n  <input matInput type="text" [value]="counterValue" [readonly]="readonly" only-digits [(ngModel)]="value" (blur)="onBlur()">\n\n  <button mat-mini-fab matSuffix [color]="color" (click)="increment()" [disabled]="counterValue >= max">\n    <mat-icon>add</mat-icon>\n  </button>\n</mat-form-field>\n',providers:[i],styles:[":host ::ng-deep .mat-form-field-infix{width:100%;text-align:center}:host ::ng-deep .mat-mini-fab{width:32px;height:32px}:host ::ng-deep .mat-mini-fab .mat-button-wrapper{padding:3px}"]}]}],t.ctorParameters=function(){return[]},t.propDecorators={min:[{type:e.Input}],max:[{type:e.Input}],step:[{type:e.Input}],appearance:[{type:e.Input}],color:[{type:e.Input}],counterValue:[{type:e.Input}],readonly:[{type:e.Input}],counter:[{type:e.Input}]},t}();var c=function(){function t(t){this.el=t,this.el.nativeElement.onkeypress=function(t){(t.which<48||t.which>57)&&t.preventDefault()}}return t.decorators=[{type:e.Directive,args:[{selector:"[only-digits]"}]}],t.ctorParameters=function(){return[{type:e.ElementRef}]},t}();var p=function(){function t(){}return t.decorators=[{type:e.NgModule,args:[{declarations:[l,c],imports:[o.MatInputModule,r.MatIconModule,a.MatButtonModule,n.FormsModule],exports:[l]}]}],t}();t.AngularCounterModule=p,t.CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR=i,t.CounterComponent=l,t.Éµa=c,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=angular-input-counter.umd.min.js.map